# Generated by Django 2.2.9 on 2020-01-19 17:01

from django.db import migrations, models
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Classify',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='修改时间')),
                ('uid', models.UUIDField(default=uuid.UUID('10c150ac-a9ad-4dcc-8f28-f0767ac5ba05'), editable=False, verbose_name='分类ID')),
                ('code', models.CharField(blank=True, max_length=32, null=True, verbose_name='编码')),
                ('img', models.ImageField(upload_to='classify', verbose_name='分类主图')),
                ('name', models.CharField(max_length=12, verbose_name='名称')),
                ('desc', models.CharField(blank=True, max_length=64, null=True, verbose_name='描述')),
                ('reorder', models.SmallIntegerField(default=0, verbose_name='排序')),
                ('is_valid', models.BooleanField(default=True, verbose_name='是否有效')),
                ('parent', models.ForeignKey(on_delete=True, related_name='children', to='mall.Classify', verbose_name='商品分类自关联')),
            ],
            options={
                'db_table': 'mall_classify',
                'ordering': ['-reorder'],
            },
        ),
        migrations.CreateModel(
            name='Tag',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='修改时间')),
                ('uid', models.UUIDField(default=uuid.UUID('106ab7df-b1f9-4cfb-8a16-2f986356c921'), editable=False, verbose_name='分类ID')),
                ('img', models.ImageField(upload_to='classify', verbose_name='分类主图')),
                ('code', models.CharField(blank=True, max_length=32, null=True, verbose_name='编码')),
                ('name', models.CharField(max_length=12, verbose_name='名称')),
                ('reorder', models.SmallIntegerField(default=0, verbose_name='排序')),
                ('is_valid', models.BooleanField(default=True, verbose_name='是否有效')),
            ],
            options={
                'db_table': 'mall_tag',
            },
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='修改时间')),
                ('uid', models.UUIDField(default=uuid.UUID('651120f8-6af0-4ba6-ba56-73615efb3ba8'), editable=False, verbose_name='商品id')),
                ('name', models.CharField(max_length=128, verbose_name='商品名称')),
                ('desc', models.CharField(blank=True, max_length=256, null=True, verbose_name='简单描述')),
                ('content', models.TextField(verbose_name='商品描述')),
                ('types', models.SmallIntegerField(choices=[(11, '实物商品'), (12, '虚拟商品')], default=11, verbose_name='商品类型')),
                ('price', models.IntegerField(verbose_name='兑换价格(积分兑换)')),
                ('origin_price', models.FloatField(verbose_name='原价')),
                ('img', models.ImageField(upload_to='product', verbose_name='主图')),
                ('buy_link', models.CharField(blank=True, max_length=256, null=True, verbose_name='购买连接')),
                ('reorder', models.SmallIntegerField(default=0, verbose_name='排序')),
                ('status', models.SmallIntegerField(choices=[(11, '销售中'), (12, '已售完'), (13, '已下架')], default=13, verbose_name='商品状态')),
                ('is_valid', models.BooleanField(default=True, verbose_name='是否有效')),
                ('classes', models.ManyToManyField(blank=True, related_name='classes', to='mall.Classify', verbose_name='分类')),
                ('tags', models.ManyToManyField(blank=True, related_name='tags', to='mall.Tag', verbose_name='标签')),
            ],
            options={
                'db_table': 'mall_product',
                'ordering': ['-reorder'],
            },
        ),
    ]
